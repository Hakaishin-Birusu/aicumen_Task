{
  "contractName": "INRToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_t",
          "type": "address"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "burnFrom",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"burnFrom\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_t\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Sagar Chaurasia\",\"methods\":{\"balanceOf(address)\":{\"details\":\"check balance of tokens for specific entity.\"},\"burn(address,uint256)\":{\"details\":\"Burns a specific amount of tokens.\",\"params\":{\"value\":\"number of tokens to be burned.\"}},\"decimals()\":{\"return\":\"the number of decimals of the token.\"},\"name()\":{\"return\":\"the name of the token.\"},\"symbol()\":{\"return\":\"the symbol of the token.\"},\"totalSupply()\":{\"details\":\"retunrs total number of tokens.\"},\"transfer(address,uint256)\":{\"details\":\"transfer tokens from sender to reciever.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"defining explicit arguments for transferring tokens as security mesure only set entities can carry out this method\"}},\"title\":\"INRToken\"},\"userdoc\":{\"methods\":{\"constructor\":\"Note : everything can be passed as parmeter (and same contract can be used for deploying USDT and INRT can be use ) , but for task understanidng and simplicity i have hardcoded gthe values here Here , _t is the address of acuConverter NOTE 2: 2 point decimal precision will leverage us to carry out any token related transaction in cents/paise ,  in the same way where ether transaction deals with wei (18 point decimal) We have implemanted fixed supply token erc20 standard and , minitng only 10000 INR tokens or 1000000 paise tokens \"}}},\"settings\":{\"compilationTarget\":{\"/home/sagar/Desktop/solution/aicumen_Task/INRToken/contracts/Non_flattened_contracts/INRToken.sol\":\"INRToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/sagar/Desktop/solution/aicumen_Task/INRToken/contracts/Non_flattened_contracts/ERC20.sol\":{\"keccak256\":\"0x802a9e56b0cc953f337cfe8bbc4cc9601e9fb9fa3d5ea6a1fb258fec2392f8a5\",\"urls\":[\"bzzr://49fe286a2babaa2829965aae4c3f92221a4b8fba8521c7667c503f099a7abd6f\"]},\"/home/sagar/Desktop/solution/aicumen_Task/INRToken/contracts/Non_flattened_contracts/IERC.sol\":{\"keccak256\":\"0xcd9067f6ff4d49aac1a56182114baf55663705d5b43dbb1734cc76554c7032c9\",\"urls\":[\"bzzr://801bb2ec47b52070859f892f572dfe8334f8b3f05356baa45e41409d47536800\"]},\"/home/sagar/Desktop/solution/aicumen_Task/INRToken/contracts/Non_flattened_contracts/INRToken.sol\":{\"keccak256\":\"0x19f890dea57a3142391f27cd901458d989f6226fc84a0c2a6fb5813f82235620\",\"urls\":[\"bzzr://6e40af0e2ebdf5a00af98bbf28dafa8ef573839f34e65e2ca7ec7feb3fefecfd\"]},\"/home/sagar/Desktop/solution/aicumen_Task/INRToken/contracts/Non_flattened_contracts/SafeMath.sol\":{\"keccak256\":\"0x4b2431d884ccdac05dc76171e8bb1213e08aca92a6be86e8fdad43b68b828c31\",\"urls\":[\"bzzr://2cc02aaac0136cabf4ee88b18a7779eac7769adf53c114b9840bfc58cb479da6\"]}},\"version\":1}",
  "bytecode": "0x608060405260405160208062000f3a833981018060405260208110156200002557600080fd5b81019080805190602001909291905050506040805190810160405280600881526020017f494e52546f6b656e00000000000000000000000000000000000000000000000081525060049080519060200190620000839291906200031d565b506040805190810160405280600481526020017f494e52540000000000000000000000000000000000000000000000000000000081525060059080519060200190620000d19291906200031d565b506002600660006101000a81548160ff021916908360ff1602179055506000620f424090506200011133826200015a640100000000026401000000009004565b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620003cc565b6200017f81600254620002926401000000000262000aa8179091906401000000009004565b600281905550620001e6816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620002926401000000000262000aa8179091906401000000009004565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600080828401905083811015151562000313576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200036057805160ff191683800117855562000391565b8280016001018555821562000391579182015b828111156200039057825182559160200191906001019062000373565b5b509050620003a09190620003a4565b5090565b620003c991905b80821115620003c5576000816000905550600101620003ab565b5090565b90565b610b5e80620003dc6000396000f3fe60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461009357806318160ddd1461012357806323b872dd1461014e578063313ce567146101e157806370a082311461021257806395d89b41146102775780639dc29fac14610307578063a9059cbb14610362575b600080fd5b34801561009f57600080fd5b506100a86103d5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e85780820151818401526020810190506100cd565b50505050905090810190601f1680156101155780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012f57600080fd5b50610138610477565b6040518082815260200191505060405180910390f35b34801561015a57600080fd5b506101c76004803603606081101561017157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610481565b604051808215151515815260200191505060405180910390f35b3480156101ed57600080fd5b506101f6610584565b604051808260ff1660ff16815260200191505060405180910390f35b34801561021e57600080fd5b506102616004803603602081101561023557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061059b565b6040518082815260200191505060405180910390f35b34801561028357600080fd5b5061028c6105e3565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102cc5780820151818401526020810190506102b1565b50505050905090810190601f1680156102f95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561031357600080fd5b506103606004803603604081101561032a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610685565b005b34801561036e57600080fd5b506103bb6004803603604081101561038557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610693565b604051808215151515815260200191505060405180910390f35b606060048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561046d5780601f106104425761010080835404028352916020019161046d565b820191906000526020600020905b81548152906001019060200180831161045057829003601f168201915b5050505050905090565b6000600254905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561056e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f417574686f72697a6174696f6e206661696c65642c206e6f742073657420656e81526020017f746974790000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6105798484846106aa565b600190509392505050565b6000600660009054906101000a900460ff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060058054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561067b5780601f106106505761010080835404028352916020019161067b565b820191906000526020600020905b81548152906001019060200180831161065e57829003601f168201915b5050505050905090565b61068f828261083a565b5050565b60006106a03384846106aa565b6001905092915050565b6106fb816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a1d90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061078e816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610aa890919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610905576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f45524332303a206275726e2066726f6d20746865207a65726f2061646472657381526020017f730000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b61091a81600254610a1d90919063ffffffff16565b600281905550610971816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a1d90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000828211151515610a97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000808284019050838110151515610b28576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea165627a7a723058209a3b698c3a72b648336675cd45572a570a9b5bc4f0a0c91fe6e94fbe99b169b50029",
  "deployedBytecode": "0x60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461009357806318160ddd1461012357806323b872dd1461014e578063313ce567146101e157806370a082311461021257806395d89b41146102775780639dc29fac14610307578063a9059cbb14610362575b600080fd5b34801561009f57600080fd5b506100a86103d5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e85780820151818401526020810190506100cd565b50505050905090810190601f1680156101155780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012f57600080fd5b50610138610477565b6040518082815260200191505060405180910390f35b34801561015a57600080fd5b506101c76004803603606081101561017157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610481565b604051808215151515815260200191505060405180910390f35b3480156101ed57600080fd5b506101f6610584565b604051808260ff1660ff16815260200191505060405180910390f35b34801561021e57600080fd5b506102616004803603602081101561023557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061059b565b6040518082815260200191505060405180910390f35b34801561028357600080fd5b5061028c6105e3565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102cc5780820151818401526020810190506102b1565b50505050905090810190601f1680156102f95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561031357600080fd5b506103606004803603604081101561032a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610685565b005b34801561036e57600080fd5b506103bb6004803603604081101561038557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610693565b604051808215151515815260200191505060405180910390f35b606060048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561046d5780601f106104425761010080835404028352916020019161046d565b820191906000526020600020905b81548152906001019060200180831161045057829003601f168201915b5050505050905090565b6000600254905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561056e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f417574686f72697a6174696f6e206661696c65642c206e6f742073657420656e81526020017f746974790000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6105798484846106aa565b600190509392505050565b6000600660009054906101000a900460ff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060058054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561067b5780601f106106505761010080835404028352916020019161067b565b820191906000526020600020905b81548152906001019060200180831161065e57829003601f168201915b5050505050905090565b61068f828261083a565b5050565b60006106a03384846106aa565b6001905092915050565b6106fb816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a1d90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061078e816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610aa890919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610905576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f45524332303a206275726e2066726f6d20746865207a65726f2061646472657381526020017f730000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b61091a81600254610a1d90919063ffffffff16565b600281905550610971816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a1d90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000828211151515610a97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000808284019050838110151515610b28576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea165627a7a723058209a3b698c3a72b648336675cd45572a570a9b5bc4f0a0c91fe6e94fbe99b169b50029",
  "sourceMap": "305:1669:3:-;;;1010:308;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1010:308:3;;;;;;;;;;;;;;;;1057:18;;;;;;;;;;;;;;;;;;:5;:18;;;;;;;;;;;;:::i;:::-;;1083:16;;;;;;;;;;;;;;;;;;:7;:16;;;;;;;;;;;;:::i;:::-;;1119:1;1107:9;;:13;;;;;;;;;;;;;;;;;;1128:19;1150:7;1128:29;;1258:30;1264:10;1276:11;1258:5;;;:30;;;:::i;:::-;1308:2;1296:9;;:14;;;;;;;;;;;;;;;;;;1010:308;;305:1669;;2037:226:1;2119:24;2136:6;2119:12;;:16;;;;;;:24;;;;;:::i;:::-;2104:12;:39;;;;2174:30;2197:6;2174:9;:18;2184:7;2174:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;;:::i;:::-;2153:9;:18;2163:7;2153:18;;;;;;;;;;;;;;;:51;;;;2240:7;2219:37;;2236:1;2219:37;;;2249:6;2219:37;;;;;;;;;;;;;;;;;;2037:226;;:::o;364:176:4:-;422:7;441:9;457:1;453;:5;441:17;;481:1;476;:6;;468:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;532:1;525:8;;;364:176;;;;:::o;305:1669:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "305:1669:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1590:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1590:79:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1590:79:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;753:89:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;753:89:1;;;;;;;;;;;;;;;;;;;;;;;1414:183;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1414:183:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1414:183:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1888:79:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1888:79:3;;;;;;;;;;;;;;;;;;;;;;;;;;;921:108:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;921:108:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;921:108:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1731:83:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1731:83:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1731:83:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1438:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1438:92:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1438:92:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:153:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1104:153:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1104:153:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1590:79:3;1627:13;1657:5;1650:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1590:79;:::o;753:89:1:-;797:7;823:12;;816:19;;753:89;:::o;1414:183::-;1517:4;617:9;;;;;;;;;;;603:23;;:10;:23;;;595:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1533:36;1543:6;1551:9;1562:6;1533:9;:36::i;:::-;1586:4;1579:11;;1414:183;;;;;:::o;1888:79:3:-;1929:5;1951:9;;;;;;;;;;;1944:16;;1888:79;:::o;921:108:1:-;978:7;1004:9;:18;1014:7;1004:18;;;;;;;;;;;;;;;;997:25;;921:108;;;:::o;1731:83:3:-;1770:13;1800:7;1793:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1731:83;:::o;1438:92::-;1501:22;1507:8;1517:5;1501;:22::i;:::-;1438:92;;:::o;1104:153:1:-;1173:4;1189:40;1199:10;1211:9;1222:6;1189:9;:40::i;:::-;1246:4;1239:11;;1104:153;;;;:::o;1684:260::-;1793:29;1815:6;1793:9;:17;1803:6;1793:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;1773:9;:17;1783:6;1773:17;;;;;;;;;;;;;;;:49;;;;1855:32;1880:6;1855:9;:20;1865:9;1855:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;1832:9;:20;1842:9;1832:20;;;;;;;;;;;;;;;:55;;;;1919:9;1902:35;;1911:6;1902:35;;;1930:6;1902:35;;;;;;;;;;;;;;;;;;1684:260;;;:::o;2352:300::-;2445:1;2426:21;;:7;:21;;;;2418:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2511:23;2528:5;2511:12;;:16;;:23;;;;:::i;:::-;2496:12;:38;;;;2565:29;2588:5;2565:9;:18;2575:7;2565:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;2544:9;:18;2554:7;2544:18;;;;;;;;;;;;;;;:50;;;;2635:1;2609:36;;2618:7;2609:36;;;2639:5;2609:36;;;;;;;;;;;;;;;;;;2352:300;;:::o;804:179:4:-;862:7;894:1;889;:6;;881:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;940:9;956:1;952;:5;940:17;;975:1;968:8;;;804:179;;;;:::o;364:176::-;422:7;441:9;457:1;453;:5;441:17;;481:1;476;:6;;468:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;532:1;525:8;;;364:176;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./ERC20.sol\";\n// Instead of manual storing of ERC20contracts we could have used open-zepplin git import link but since we wanted to define only needed functions\n// thats why we stoed it locally and defined as per need\n/**\n * @title INRToken\n * @author Sagar Chaurasia\n */\ncontract INRToken is ERC20 {\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n    * Note : everything can be passed as parmeter (and same contract can be used for deploying USDT and INRT can be use ) ,\n    * but for task understanidng and simplicity i have hardcoded gthe values here\n    * Here , _t is the address of acuConverter\n    * NOTE 2: 2 point decimal precision will leverage us to carry out any token related transaction in cents/paise , \n    * in the same way where ether transaction deals with wei (18 point decimal)\n    * We have implemanted fixed supply token erc20 standard and , minitng only 10000 INR tokens or 1000000 paise tokens \n    */\n    constructor(address _t) public payable {\n      _name = \"INRToken\";\n      _symbol = \"INRT\";\n      _decimals = 2;\n      uint256 totalSupply = 1000000;\n      // Since its a fixed supply ERC token , all the tokens are minted to contract deployer\n      _mint(msg.sender, totalSupply);\n      setEntity = _t;\n\n    }\n\n    /**\n     * @dev Burns a specific amount of tokens.\n     * @param value number of tokens to be burned.\n     */\n    function burn(address burnFrom,  uint256 value) public {\n      _burn(burnFrom, value);\n    }\n\n    /**\n     * @return the name of the token.\n     */\n    function name() public view returns (string memory) {\n      return _name;\n    }\n\n    /**\n     * @return the symbol of the token.\n     */\n    function symbol() public view returns (string memory) {\n      return _symbol;\n    }\n\n    /**\n     * @return the number of decimals of the token.\n     */\n    function decimals() public view returns (uint8) {\n      return _decimals;\n    }\n    \n}",
  "sourcePath": "/home/sagar/Desktop/solution/aicumen_Task/INRToken/contracts/Non_flattened_contracts/INRToken.sol",
  "ast": {
    "absolutePath": "/home/sagar/Desktop/solution/aicumen_Task/INRToken/contracts/Non_flattened_contracts/INRToken.sol",
    "exportedSymbols": {
      "INRToken": [
        400
      ]
    },
    "id": 401,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 321,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/home/sagar/Desktop/solution/aicumen_Task/INRToken/contracts/Non_flattened_contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 322,
        "nodeType": "ImportDirective",
        "scope": 401,
        "sourceUnit": 269,
        "src": "25:21:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 323,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 268,
              "src": "326:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$268",
                "typeString": "contract ERC20"
              }
            },
            "id": 324,
            "nodeType": "InheritanceSpecifier",
            "src": "326:5:3"
          }
        ],
        "contractDependencies": [
          268,
          319
        ],
        "contractKind": "contract",
        "documentation": "@title INRToken\n@author Sagar Chaurasia",
        "fullyImplemented": true,
        "id": 400,
        "linearizedBaseContracts": [
          400,
          268,
          319
        ],
        "name": "INRToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 326,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 400,
            "src": "339:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 325,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "339:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 328,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 400,
            "src": "365:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 327,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "365:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 330,
            "name": "_decimals",
            "nodeType": "VariableDeclaration",
            "scope": 400,
            "src": "393:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 329,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "393:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 361,
              "nodeType": "Block",
              "src": "1049:269:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 335,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 326,
                      "src": "1057:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "494e52546f6b656e",
                      "id": 336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1065:10:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_7b38d7fd75a39dcae1ca0dd52b6bcdbcd6d996e174aea9bfd30d755a5fe1a856",
                        "typeString": "literal_string \"INRToken\""
                      },
                      "value": "INRToken"
                    },
                    "src": "1057:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:18:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 339,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 328,
                      "src": "1083:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "494e5254",
                      "id": 340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1093:6:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_51c2f10a1140edb43758e3a936a04812b2e4cafcfd08d889ed06c8ea6bce5dbd",
                        "typeString": "literal_string \"INRT\""
                      },
                      "value": "INRT"
                    },
                    "src": "1083:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "1083:16:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 343,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 330,
                      "src": "1107:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1119:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "1107:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "1107:13:3"
                },
                {
                  "assignments": [
                    348
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 348,
                      "name": "totalSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 361,
                      "src": "1128:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 347,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1128:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 350,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "31303030303030",
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1150:7:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000_by_1",
                      "typeString": "int_const 1000000"
                    },
                    "value": "1000000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1128:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 352,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "1264:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1264:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 354,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "1276:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 351,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 224,
                      "src": "1258:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1258:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "1258:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 357,
                      "name": "setEntity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "1296:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 358,
                      "name": "_t",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "1308:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1296:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "1296:14:3"
                }
              ]
            },
            "documentation": "Note : everything can be passed as parmeter (and same contract can be used for deploying USDT and INRT can be use ) ,\nbut for task understanidng and simplicity i have hardcoded gthe values here\nHere , _t is the address of acuConverter\nNOTE 2: 2 point decimal precision will leverage us to carry out any token related transaction in cents/paise , \nin the same way where ether transaction deals with wei (18 point decimal)\nWe have implemanted fixed supply token erc20 standard and , minitng only 10000 INR tokens or 1000000 paise tokens ",
            "id": 362,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "name": "_t",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "1022:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1021:12:3"
            },
            "returnParameters": {
              "id": 334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1049:0:3"
            },
            "scope": 400,
            "src": "1010:308:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 374,
              "nodeType": "Block",
              "src": "1493:37:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 370,
                        "name": "burnFrom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "1507:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 371,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "1517:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 369,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 267,
                      "src": "1501:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1501:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "1501:22:3"
                }
              ]
            },
            "documentation": "@dev Burns a specific amount of tokens.\n@param value number of tokens to be burned.",
            "id": 375,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 364,
                  "name": "burnFrom",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "1452:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1452:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 366,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "1471:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1471:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1451:34:3"
            },
            "returnParameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1493:0:3"
            },
            "scope": 400,
            "src": "1438:92:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "1642:27:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 380,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 326,
                    "src": "1657:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 379,
                  "id": 381,
                  "nodeType": "Return",
                  "src": "1650:12:3"
                }
              ]
            },
            "documentation": "@return the name of the token.",
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1603:2:3"
            },
            "returnParameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 378,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "1627:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1627:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1626:15:3"
            },
            "scope": 400,
            "src": "1590:79:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 390,
              "nodeType": "Block",
              "src": "1785:29:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 388,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 328,
                    "src": "1800:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 387,
                  "id": 389,
                  "nodeType": "Return",
                  "src": "1793:14:3"
                }
              ]
            },
            "documentation": "@return the symbol of the token.",
            "id": 391,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1746:2:3"
            },
            "returnParameters": {
              "id": 387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 386,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 391,
                  "src": "1770:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 385,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1770:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1769:15:3"
            },
            "scope": 400,
            "src": "1731:83:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 398,
              "nodeType": "Block",
              "src": "1936:31:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 396,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 330,
                    "src": "1951:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 395,
                  "id": 397,
                  "nodeType": "Return",
                  "src": "1944:16:3"
                }
              ]
            },
            "documentation": "@return the number of decimals of the token.",
            "id": 399,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1905:2:3"
            },
            "returnParameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 394,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 399,
                  "src": "1929:5:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1928:7:3"
            },
            "scope": 400,
            "src": "1888:79:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 401,
        "src": "305:1669:3"
      }
    ],
    "src": "0:1974:3"
  },
  "legacyAST": {
    "absolutePath": "/home/sagar/Desktop/solution/aicumen_Task/INRToken/contracts/Non_flattened_contracts/INRToken.sol",
    "exportedSymbols": {
      "INRToken": [
        400
      ]
    },
    "id": 401,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 321,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/home/sagar/Desktop/solution/aicumen_Task/INRToken/contracts/Non_flattened_contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 322,
        "nodeType": "ImportDirective",
        "scope": 401,
        "sourceUnit": 269,
        "src": "25:21:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 323,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 268,
              "src": "326:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$268",
                "typeString": "contract ERC20"
              }
            },
            "id": 324,
            "nodeType": "InheritanceSpecifier",
            "src": "326:5:3"
          }
        ],
        "contractDependencies": [
          268,
          319
        ],
        "contractKind": "contract",
        "documentation": "@title INRToken\n@author Sagar Chaurasia",
        "fullyImplemented": true,
        "id": 400,
        "linearizedBaseContracts": [
          400,
          268,
          319
        ],
        "name": "INRToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 326,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 400,
            "src": "339:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 325,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "339:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 328,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 400,
            "src": "365:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 327,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "365:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 330,
            "name": "_decimals",
            "nodeType": "VariableDeclaration",
            "scope": 400,
            "src": "393:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 329,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "393:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 361,
              "nodeType": "Block",
              "src": "1049:269:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 335,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 326,
                      "src": "1057:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "494e52546f6b656e",
                      "id": 336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1065:10:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_7b38d7fd75a39dcae1ca0dd52b6bcdbcd6d996e174aea9bfd30d755a5fe1a856",
                        "typeString": "literal_string \"INRToken\""
                      },
                      "value": "INRToken"
                    },
                    "src": "1057:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:18:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 339,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 328,
                      "src": "1083:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "494e5254",
                      "id": 340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1093:6:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_51c2f10a1140edb43758e3a936a04812b2e4cafcfd08d889ed06c8ea6bce5dbd",
                        "typeString": "literal_string \"INRT\""
                      },
                      "value": "INRT"
                    },
                    "src": "1083:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "1083:16:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 343,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 330,
                      "src": "1107:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1119:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "1107:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "1107:13:3"
                },
                {
                  "assignments": [
                    348
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 348,
                      "name": "totalSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 361,
                      "src": "1128:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 347,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1128:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 350,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "31303030303030",
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1150:7:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000_by_1",
                      "typeString": "int_const 1000000"
                    },
                    "value": "1000000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1128:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 352,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "1264:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1264:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 354,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "1276:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 351,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 224,
                      "src": "1258:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1258:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "1258:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 357,
                      "name": "setEntity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "1296:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 358,
                      "name": "_t",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "1308:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1296:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "1296:14:3"
                }
              ]
            },
            "documentation": "Note : everything can be passed as parmeter (and same contract can be used for deploying USDT and INRT can be use ) ,\nbut for task understanidng and simplicity i have hardcoded gthe values here\nHere , _t is the address of acuConverter\nNOTE 2: 2 point decimal precision will leverage us to carry out any token related transaction in cents/paise , \nin the same way where ether transaction deals with wei (18 point decimal)\nWe have implemanted fixed supply token erc20 standard and , minitng only 10000 INR tokens or 1000000 paise tokens ",
            "id": 362,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "name": "_t",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "1022:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1021:12:3"
            },
            "returnParameters": {
              "id": 334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1049:0:3"
            },
            "scope": 400,
            "src": "1010:308:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 374,
              "nodeType": "Block",
              "src": "1493:37:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 370,
                        "name": "burnFrom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "1507:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 371,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "1517:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 369,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 267,
                      "src": "1501:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1501:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "1501:22:3"
                }
              ]
            },
            "documentation": "@dev Burns a specific amount of tokens.\n@param value number of tokens to be burned.",
            "id": 375,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 364,
                  "name": "burnFrom",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "1452:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1452:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 366,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "1471:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1471:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1451:34:3"
            },
            "returnParameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1493:0:3"
            },
            "scope": 400,
            "src": "1438:92:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "1642:27:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 380,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 326,
                    "src": "1657:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 379,
                  "id": 381,
                  "nodeType": "Return",
                  "src": "1650:12:3"
                }
              ]
            },
            "documentation": "@return the name of the token.",
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1603:2:3"
            },
            "returnParameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 378,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "1627:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1627:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1626:15:3"
            },
            "scope": 400,
            "src": "1590:79:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 390,
              "nodeType": "Block",
              "src": "1785:29:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 388,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 328,
                    "src": "1800:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 387,
                  "id": 389,
                  "nodeType": "Return",
                  "src": "1793:14:3"
                }
              ]
            },
            "documentation": "@return the symbol of the token.",
            "id": 391,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1746:2:3"
            },
            "returnParameters": {
              "id": 387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 386,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 391,
                  "src": "1770:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 385,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1770:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1769:15:3"
            },
            "scope": 400,
            "src": "1731:83:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 398,
              "nodeType": "Block",
              "src": "1936:31:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 396,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 330,
                    "src": "1951:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 395,
                  "id": 397,
                  "nodeType": "Return",
                  "src": "1944:16:3"
                }
              ]
            },
            "documentation": "@return the number of decimals of the token.",
            "id": 399,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1905:2:3"
            },
            "returnParameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 394,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 399,
                  "src": "1929:5:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1928:7:3"
            },
            "scope": 400,
            "src": "1888:79:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 401,
        "src": "305:1669:3"
      }
    ],
    "src": "0:1974:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-11-01T11:46:55.991Z",
  "devdoc": {
    "author": "Sagar Chaurasia",
    "methods": {
      "balanceOf(address)": {
        "details": "check balance of tokens for specific entity."
      },
      "burn(address,uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "value": "number of tokens to be burned."
        }
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "name()": {
        "return": "the name of the token."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "retunrs total number of tokens."
      },
      "transfer(address,uint256)": {
        "details": "transfer tokens from sender to reciever."
      },
      "transferFrom(address,address,uint256)": {
        "details": "defining explicit arguments for transferring tokens as security mesure only set entities can carry out this method"
      }
    },
    "title": "INRToken"
  },
  "userdoc": {
    "methods": {
      "constructor": "Note : everything can be passed as parmeter (and same contract can be used for deploying USDT and INRT can be use ) , but for task understanidng and simplicity i have hardcoded gthe values here Here , _t is the address of acuConverter NOTE 2: 2 point decimal precision will leverage us to carry out any token related transaction in cents/paise ,  in the same way where ether transaction deals with wei (18 point decimal) We have implemanted fixed supply token erc20 standard and , minitng only 10000 INR tokens or 1000000 paise tokens "
    }
  }
}